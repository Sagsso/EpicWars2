<?php

/**
 * This interface is in charge of naming the 
 * functions that are specific to the character object.
 */
interface ICharacter {
    
    /**
     * Manages the character's stats.
     * 
     * @return array Returns all the character's stats.
     */
    function getStats() :array;
    
    /**
     * Sets the character's stats.
     * @param array $stats With all the necessary values to set the character's stats.
     * @return void
     */
    function setStats(array $stats) :void;
    
    /**
     * Manages the attack generated by a character.
     * 
     * This function manages the value of the damage generated to the target, 
     * depending on variables such as the character's stats and the 
     * probability of critical hits.
     * 
     * @param ICharacter $target The character being attacked.
     * @return array With information relevant to the attack.
     */
    function attack(ICharacter $target) :array;
    
    /**
     * Manages the character's damage.
     * 
     * Function that makes the necessary logic that affect the life of 
     * the character according to the attack received.
     * 
     * @param float $value
     * @param bool $isMagical 
     * @return array With information relevant to the character's damage.
     */
    function getDamage(float $value, bool $isMagical) :array;
    
    /**
     * Defines the character's stats in its initial state (Level 1).
     * 
     * @return void
     */
    function resetStats() :void;
}
